{"version":3,"sources":["shared/api.js","shared/datetime.js","store/data.js","shared/helpers.js","store/display.js","store/reducer.js","store/index.js","themes/theme.js","components/Weather/WeatherUnit.js","components/Weather/WeatherControl.js","shared/temperature.js","components/Weather/WeatherCard.js","components/Weather/WeatherInfo.js","components/Weather/WeatherChart.js","components/Weather/Weather.js","components/Loading.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","APP_ID","buildQuery","params","query","name","push","encodeURIComponent","join","getForecast","a","location","q","cnt","fetch","response","ok","Error","json","MONTHS","toInt","value","parseInt","getDay","dateText","split","map","year","month","dayOfMonth","slice","fetchForecast","createAsyncThunk","forecast","cod","message","dataSlice","createSlice","initialState","loading","error","extraReducers","fulfilled","state","action","list","payload","dayMap","i","length","day","dt_txt","dayList","data","rejected","selectLoading","selectError","selectForecast","clampIndex","index","start","end","sortByCountDesc","b","count","iconUrl","icon","displaySlice","unit","pageSize","pageIndex","active","reducers","switchUnit","includes","setPageSize","Math","min","max","prevPage","nextPage","activate","actions","selectUnit","display","selectPageSize","selectPageIndex","selectActive","reducer","dataReducer","store","configureStore","theme","createMuiTheme","palette","primary","light","main","dark","secondary","useStyles","makeStyles","row","width","justifyContent","WeatherUnit","classes","useSelector","dispatch","useDispatch","Grid","item","container","xs","md","lg","RadioGroup","aria-label","onChange","event","target","className","FormControlLabel","control","Radio","color","label","WeatherControl","IconButton","onClick","ArrowBack","fontSize","Box","flexGrow","ArrowForward","ABSOLUTE_ZERO","kelvinToCelsius","kelvin","celsius","round","kelvinToFarenheit","farenheit","root","padding","spacing","flexShrink","cursor","borderColor","borderWidth","borderStyle","cardContent","position","weather","backgroundColor","margin","height","avgWeather","top","right","WeatherCard","onActivate","useState","temp","setTemp","avgTemp","useMemo","reduce","acc","val","weathers","forEach","types","sortedByMain","Object","values","sort","useEffect","Card","raised","data-testid","CardContent","p","Avatar","alt","description","src","px","pb","direction","alignItems","Typography","variant","py","pt","justify","floor","id","wrapper","overflow","cards","flexWrap","transition","WeatherInfo","useTheme","matchesLg","useMediaQuery","breakpoints","up","matchesMd","matchesSm","style","transform","handleActivate","WeatherChart","setData","baseData","time","hour","minute","padStart","getTime","labels","datasets","Paper","options","maintainAspectRatio","scales","y","x","ticks","font","size","elements","bar","plugins","legend","tooltip","displayColors","callbacks","title","context","dataIndex","Weather","Fade","in","timeout","enter","flexDirection","Loading","exit","CircularProgress","shown","setShown","setMessage","handleClose","Snackbar","open","onClose","Alert","severity","App","CssBaseline","Boolean","window","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bc7210e.chunk.js","sourcesContent":["const BASE_URL = 'https://api.openweathermap.org/data/2.5';\r\nconst APP_ID = '75f972b80e26f14fe6c920aa6a85ad57';\r\n\r\nconst buildQuery = (params = {}) => {\r\n  const query = [];\r\n\r\n  for (const name in params) {\r\n    query.push(`${name}=${encodeURIComponent(params[name])}`);\r\n  }\r\n  query.push(`appid=${encodeURIComponent(APP_ID)}`);\r\n\r\n  return query.join('&');\r\n};\r\n\r\nexport const getForecast = async (location = 'Delhi,in') => {\r\n  const query = buildQuery({\r\n    q: location,\r\n    cnt: 40,\r\n  });\r\n\r\n  const response = await fetch(`${BASE_URL}/forecast?${query}`);\r\n  if (!response.ok) {\r\n    throw new Error('Unable to fetch forecast');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n","const MONTHS = [\r\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\r\n]\r\n\r\nconst toInt = (value) => parseInt(value);\r\n\r\n// date and time is always based on API date text, which is in UTC\r\n// this will ensure same date and time regardless of local time of client\r\nexport const getDay = (dateText) => {\r\n  const dayText = dateText.split(' ')[0];\r\n  const [year, month, dayOfMonth] = dayText.split('-').map(toInt);\r\n\r\n  return `${dayOfMonth} ${MONTHS[month - 1]} ${`${year}`.slice(-2)}`;\r\n};\r\n\r\nexport const getTime = (dateText) => {\r\n  const timeText = dateText.split(' ')[1];\r\n  const [hour, minute] = timeText.split(':').map(toInt);\r\n\r\n  if (hour >= 12) {\r\n    return `${hour > 12 ? hour - 12 : hour}:${`${minute}`.padStart(2, '0')} PM`;\r\n  } else {\r\n    return `${(hour === 0 ? `00` : hour)}:${`${minute}`.padStart(2, '0')} AM`;\r\n  }\r\n};\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getForecast } from '../shared/api';\r\nimport { getDay } from '../shared/datetime';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  error: null,\r\n  forecast: null,\r\n};\r\n\r\nexport const fetchForecast = createAsyncThunk(\r\n  'data/fetchForecast',\r\n  async (location) => {\r\n    const forecast = await getForecast(location);\r\n    if (forecast.cod !== '200') {\r\n      throw new Error(`Error in forecast - ${forecast.cod} - ${forecast.message}`);\r\n    }\r\n    return forecast;\r\n  },\r\n);\r\n\r\n// We are able to 'mutate' state here as createSlice uses Immer for immutability\r\nconst dataSlice = createSlice({\r\n  name: 'data',\r\n  initialState,\r\n  extraReducers: {\r\n    [fetchForecast.fulfilled]: (state, action) => {\r\n      const { list } = action.payload;\r\n      \r\n      const dayMap = {};\r\n      for (let i = 0; i < list.length; i++) {\r\n        const day = getDay(list[i].dt_txt);\r\n        \r\n        dayMap[day] = dayMap[day] || [];\r\n        dayMap[day].push(list[i]);\r\n      }\r\n      \r\n      const dayList = [];\r\n      for (let day in dayMap) {\r\n        dayList.push({\r\n          day,\r\n          data: dayMap[day],\r\n        });\r\n      }\r\n      \r\n      state.loading = false;\r\n      state.forecast = { ...action.payload, list: dayList };\r\n    },\r\n    [fetchForecast.rejected]: (state) => {\r\n      state.error = {\r\n        message: 'Unable to get forecast. Please refresh and try again.',\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectLoading = (state) => state.data.loading;\r\nexport const selectError = (state) => state.data.error;\r\nexport const selectForecast = (state) => state.data.forecast;\r\n\r\nexport default dataSlice.reducer;\r\n","export const clampIndex = (index, start, end) => {\r\n  if (index >= end) {\r\n    return end - 1;\r\n  }\r\n  \r\n  if (index < start) {\r\n    return start;\r\n  }\r\n\r\n  return index;\r\n};\r\n\r\nexport const sortByCountDesc = (a, b) => b.count - a.count;\r\n\r\nexport const iconUrl = (icon) => `https://openweathermap.org/img/wn/${icon}@2x.png`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { clampIndex } from '../shared/helpers';\r\n\r\nconst initialState = {\r\n  unit: 'F',\r\n  pageSize: 3,\r\n  pageIndex: 0,\r\n  active: 0,\r\n};\r\n\r\nconst displaySlice = createSlice({\r\n  name: 'display',\r\n  initialState,\r\n  reducers: {\r\n    switchUnit: (state, action) => {\r\n      state.unit = ['F', 'C'].includes(action.payload) ? action.payload : 'F';\r\n    },\r\n    setPageSize: (state, action) => {\r\n      state.pageSize = Math.min(action.payload, 3);\r\n      if (state.pageIndex + state.pageSize - 1 > state.active) {\r\n        state.pageIndex = Math.max(0, state.active - state.pageSize + 1);\r\n      }\r\n      state.active = clampIndex(\r\n        state.active, state.pageIndex, state.pageIndex + state.pageSize,\r\n      );\r\n    },\r\n    prevPage: (state) => {\r\n      state.pageIndex = Math.max(0, state.pageIndex - 1);\r\n      state.active = clampIndex(\r\n        state.active, state.pageIndex, state.pageIndex + state.pageSize,\r\n      );\r\n    },\r\n    nextPage: (state, action) => {   \r\n      state.pageIndex = Math.min(\r\n        action.payload.length - state.pageSize, state.pageIndex + 1\r\n      );\r\n      state.active = clampIndex(\r\n        state.active, state.pageIndex, state.pageIndex + state.pageSize,\r\n      );\r\n    },\r\n    activate: (state, action) => {\r\n      state.active = clampIndex(\r\n        action.payload, state.pageIndex, state.pageIndex + state.pageSize,\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  switchUnit,\r\n  setPageSize,\r\n  prevPage,\r\n  nextPage,\r\n  activate,\r\n} = displaySlice.actions;\r\n\r\nexport const selectUnit = (state) => state.display.unit;\r\nexport const selectPageSize = (state) => state.display.pageSize;\r\nexport const selectPageIndex = (state) => state.display.pageIndex;\r\nexport const selectActive = (state) => state.display.active;\r\n\r\nexport default displaySlice.reducer;\r\n","import dataReducer from './data';\r\nimport displayReducer from './display';\r\n\r\nconst reducer = {\r\n  data: dataReducer,\r\n  display: displayReducer,\r\n};\r\n\r\nexport default reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n});\r\n\r\nexport default store;\r\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#90CAF9',\r\n      main: '#42A5F5',\r\n      dark: '#1E88E5',\r\n    },\r\n    secondary: {\r\n      light: '#F48FB1',\r\n      main: '#EC407A',\r\n      dark: '#D81B60',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import {\r\n  FormControlLabel,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUnit, switchUnit } from '../../store/display';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  row: {\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n  }\r\n}));\r\n\r\nconst WeatherUnit = () => {\r\n  const classes = useStyles();\r\n  const unit = useSelector(selectUnit);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(switchUnit(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <Grid item container xs={12} md={10} lg={8}>\r\n      <RadioGroup\r\n        aria-label=\"unit\"\r\n        name=\"weather-unit\"\r\n        value={unit}\r\n        onChange={handleChange}\r\n        className={classes.row}\r\n        row\r\n      >\r\n        <FormControlLabel value=\"F\" control={<Radio color=\"primary\" />} label=\"Farenheit\" />\r\n        <FormControlLabel value=\"C\" control={<Radio color=\"primary\" />} label=\"Celsius\" />\r\n      </RadioGroup>\r\n    </Grid>\r\n  )\r\n};\r\n\r\nexport default WeatherUnit;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Box, Grid, IconButton } from '@material-ui/core';\r\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\r\nimport { selectForecast } from '../../store/data';\r\nimport { nextPage, prevPage, selectPageIndex, selectPageSize } from '../../store/display';\r\n\r\nconst WeatherControl = () => {\r\n  const pageIndex = useSelector(selectPageIndex);\r\n  const pageSize = useSelector(selectPageSize);\r\n  const forecast = useSelector(selectForecast);\r\n  const dispatch = useDispatch();\r\n\r\n  const length = forecast?.list?.length;\r\n  \r\n  const handlePrev = () => {\r\n    dispatch(prevPage({ length }));\r\n  };\r\n  \r\n  const handleNext = () => {\r\n    dispatch(nextPage({ length }));\r\n  };\r\n  \r\n  return (\r\n    <Grid container item>\r\n      {\r\n        length && pageIndex > 0 && (\r\n          <IconButton aria-label=\"Previous page\" color=\"primary\" onClick={handlePrev}>\r\n            <ArrowBack fontSize=\"large\" />\r\n          </IconButton>\r\n        )\r\n      }\r\n      <Box flexGrow={1} />\r\n      {\r\n        length && (pageIndex + pageSize < length) && (\r\n          <IconButton aria-label=\"Next page\" color=\"primary\" onClick={handleNext}>\r\n            <ArrowForward fontSize=\"large\" />\r\n          </IconButton>\r\n        )\r\n      }\r\n    </Grid>\r\n  )\r\n};\r\n\r\nexport default WeatherControl;\r\n","export const ABSOLUTE_ZERO  = -273.15;\r\n\r\nexport const kelvinToCelsius = (kelvin) => {\r\n  const celsius = Math.round(kelvin + ABSOLUTE_ZERO);\r\n  return celsius === -0 ? 0 : celsius;\r\n};\r\n\r\nexport const kelvinToFarenheit = (kelvin) => {\r\n  const farenheit = Math.round(((kelvin + ABSOLUTE_ZERO) * 9 / 5) + 32);\r\n  return farenheit === -0 ? 0 : farenheit;\r\n};\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { selectPageSize, selectUnit } from '../../store/display';\r\nimport { kelvinToCelsius, kelvinToFarenheit } from '../../shared/temperature';\r\nimport { iconUrl, sortByCountDesc } from '../../shared/helpers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    cursor: 'pointer',\r\n  },\r\n  active: {\r\n    borderColor: theme.palette.primary.main,\r\n    borderWidth: '3px',\r\n    borderStyle: 'solid',\r\n  },\r\n  cardContent: {\r\n    position: 'relative',\r\n  },\r\n  weather: {\r\n    backgroundColor: '#CFD8DC',\r\n    margin: '4px',\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n  },\r\n  avgWeather: {\r\n    position: 'absolute',\r\n    margin: 0,\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nconst WeatherCard = ({ day, data, active, onActivate }) => {\r\n  const classes = useStyles();\r\n  const pageSize = useSelector(selectPageSize);\r\n  const unit = useSelector(selectUnit);\r\n  const [temp, setTemp] = useState(0);\r\n\r\n  const handleClick = () => {\r\n    if (typeof onActivate === 'function') {\r\n      onActivate();\r\n    }\r\n  };\r\n\r\n  const avgTemp = useMemo(() => {\r\n    return data.reduce((acc, val) => acc + val.main.temp, 0) / data.length;\r\n  }, [data]);\r\n\r\n  const avgWeather = useMemo(() => {\r\n    // avgWeather is the weather with the most frequent icon of the most frequent weather type\r\n    const weathers = {};\r\n    data.forEach((slice) => {\r\n      const weather = slice.weather[0];\r\n\r\n      // count weathers by weather type\r\n      weathers[weather.main] = weathers[weather.main] || { count: 0, types: {} };\r\n      weathers[weather.main].count++;\r\n      \r\n      // for each weather type, count by weather icon\r\n      if (!weathers[weather.main].types[weather.icon]) {\r\n        weathers[weather.main].types[weather.icon] = { count: 0, weather };\r\n      }\r\n      weathers[weather.main].types[weather.icon].count++;\r\n    });\r\n\r\n    // select the most frequent weather type\r\n    const sortedByMain = Object.values(weathers).sort(sortByCountDesc);\r\n    // select the most frequent icon within the most frequent weather type\r\n    const sortedByIcon = Object.values(sortedByMain[0].types).sort(sortByCountDesc);\r\n\r\n    return sortedByIcon[0].weather;\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (unit === 'F') {\r\n      setTemp(kelvinToFarenheit(avgTemp));\r\n    } else {\r\n      setTemp(kelvinToCelsius(avgTemp));\r\n    }\r\n  }, [avgTemp, unit]);\r\n\r\n  return (\r\n    <Grid item xs={12/pageSize} className={classes.root} onClick={handleClick}>\r\n      <Card raised={active} className={active ? classes.active : ''} data-testid=\"card\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Box width={1} p={1}>\r\n            <Avatar\r\n              alt={avgWeather.description}\r\n              src={iconUrl(avgWeather.icon)}\r\n              className={`${classes.weather} ${classes.avgWeather}`}\r\n            />\r\n            <Box width={1} px={1} pb={1}>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Typography variant=\"subtitle1\">Temp</Typography>\r\n                <Typography variant=\"h4\">{temp}{unit}</Typography>\r\n              </Grid>\r\n            </Box>\r\n            <Box width={1} px={1} py={1}>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Typography variant=\"subtitle1\">Date</Typography>\r\n                <Typography variant=\"h4\">{day}</Typography>\r\n              </Grid>\r\n            </Box>\r\n            <Box width={1} px={1} pt={1}>\r\n              <Grid>\r\n                <Grid container alignItems=\"center\" justify=\"center\">\r\n                  {\r\n                    data.slice(0, Math.floor(data.length/2)).map((slice, index) => (\r\n                      <Avatar\r\n                        key={`${slice.weather[0].id}-${index}`}\r\n                        alt={slice.weather[0].description}\r\n                        src={iconUrl(slice.weather[0].icon)}\r\n                        className={classes.weather}\r\n                      />\r\n                    ))\r\n                  }\r\n                </Grid>\r\n                <Grid container alignItems=\"center\" justify=\"center\">\r\n                  {\r\n                    data.slice(Math.floor(data.length/2)).map((slice, index) => (\r\n                      <Avatar\r\n                        key={`${slice.weather[0].id}-${index}`}\r\n                        alt={slice.weather[0].description}\r\n                        src={iconUrl(slice.weather[0].icon)}\r\n                        className={classes.weather}\r\n                      />\r\n                    ))\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { selectForecast } from '../../store/data';\r\nimport {\r\n  activate,\r\n  selectActive,\r\n  selectPageIndex,\r\n  selectPageSize,\r\n  setPageSize,\r\n} from '../../store/display';\r\nimport WeatherControl from './WeatherControl';\r\nimport WeatherCard from './WeatherCard';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  wrapper: {\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n  cards: {\r\n    flexWrap: 'nowrap',\r\n    transition: 'transform 0.5s cubic-bezier(0.3, -0.5, 0.7, 1.5)'\r\n  },\r\n}));\r\n\r\nconst WeatherInfo = () => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const matchesLg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const matchesMd = useMediaQuery(theme.breakpoints.up('md'));\r\n  const matchesSm = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n  const forecast = useSelector(selectForecast);\r\n  const pageIndex = useSelector(selectPageIndex);\r\n  const pageSize = useSelector(selectPageSize);\r\n  const active = useSelector(selectActive);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleActivate = (index) => {\r\n    dispatch(activate(index));  \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (matchesLg) {\r\n      dispatch(setPageSize(3));\r\n    } else if (matchesMd) {\r\n      dispatch(setPageSize(2));\r\n    } else {\r\n      dispatch(setPageSize(1));\r\n    }\r\n  }, [matchesLg, matchesMd, matchesSm, dispatch]);\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <WeatherControl />\r\n      <Box className={classes.wrapper}>\r\n        <Grid\r\n          container\r\n          className={classes.cards}\r\n          style={{transform: `translateX(${-100 * pageIndex / pageSize}%)`}}\r\n        >\r\n          {\r\n            forecast?.list?.length && forecast.list.map(({day, data}, index) => (\r\n              <WeatherCard\r\n                key={day}\r\n                day={day}\r\n                data={data}\r\n                active={active === index}\r\n                onActivate={() => handleActivate(index)}\r\n              />\r\n            ))\r\n          }\r\n        </Grid>\r\n      </Box>\r\n    </Grid>\r\n  )\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Box, Paper } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { kelvinToCelsius, kelvinToFarenheit } from '../../shared/temperature';\r\nimport { selectForecast } from '../../store/data';\r\nimport { selectActive, selectUnit } from '../../store/display';\r\nimport { getTime } from '../../shared/datetime';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '75%',\r\n    },\r\n  },\r\n  container: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      height: '25vh',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: '30vh',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '40vh',\r\n    },\r\n  },\r\n}));\r\n\r\nconst WeatherChart = () => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const forecast = useSelector(selectForecast);\r\n  const unit = useSelector(selectUnit);\r\n  const active = useSelector(selectActive);\r\n  const [data, setData] = useState();\r\n\r\n  const baseData = useMemo(() => {\r\n    if (!forecast?.list?.length) {\r\n      return;\r\n    }\r\n\r\n    return forecast.list[active].data.map((slice) => {\r\n      const time = getTime(slice.dt_txt);\r\n      const temp = unit === 'F'\r\n        ? kelvinToFarenheit(slice.main.temp)\r\n        : kelvinToCelsius(slice.main.temp)\r\n\r\n      return { temp, time };\r\n    });\r\n  }, [forecast, unit, active]);\r\n\r\n  useEffect(() => {\r\n    if (!baseData) {\r\n      return;\r\n    }\r\n\r\n    setData({\r\n      labels: baseData.map(({temp}) => `${temp}${unit}`),\r\n      datasets: [{\r\n        data: baseData.map(({temp}) => temp),\r\n      }],\r\n    });\r\n  }, [baseData, unit]);\r\n\r\n  return (\r\n    <Box py={4} className={classes.root}>\r\n      <Paper className={classes.container}>\r\n        {\r\n          data && (\r\n            <Bar\r\n              data={data}\r\n              options={{\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                  y: { display: false },\r\n                  x: {\r\n                    ticks: {\r\n                      font: { size: 16 },\r\n                    },\r\n                  },\r\n                },\r\n                elements: {\r\n                  bar: {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                  },\r\n                },\r\n                plugins: {\r\n                  legend: { display: false },\r\n                  tooltip: {\r\n                    displayColors: false,\r\n                    callbacks: {\r\n                      title: () => '',\r\n                      label: (context) => {\r\n                        const { time, temp } = baseData[context.dataIndex];\r\n                        return `${time} - ${temp}${unit}`;\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default WeatherChart;\r\n","import { useSelector } from 'react-redux';\r\nimport { Box, Fade, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { selectLoading } from '../../store/data';\r\nimport WeatherUnit from './WeatherUnit';\r\nimport WeatherInfo from './WeatherInfo';\r\nimport WeatherChart from './WeatherChart';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'absolute',\r\n  },\r\n}));\r\n\r\nconst Weather = () => {\r\n  const classes = useStyles();\r\n  const loading = useSelector(selectLoading);\r\n\r\n  return (\r\n    <Fade in={!loading} timeout={{enter: 2000}}>\r\n      <Box\r\n        py={2}\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid\r\n          container\r\n          item\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          xs={10}\r\n          className={classes.root}\r\n        >\r\n          <WeatherUnit />\r\n          <WeatherInfo />\r\n          <WeatherChart />\r\n        </Grid>\r\n      </Box>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { useSelector } from 'react-redux';\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  Fade,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { selectLoading } from '../store/data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100vh',\r\n    position: 'absolute',\r\n  },\r\n}));\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n  const loading = useSelector(selectLoading);\r\n\r\n  return (\r\n    <Fade in={loading} timeout={{enter: 10, exit: 1000}}>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        direction=\"column\"\r\n        className={classes.root}\r\n      >\r\n        <Box p={2}>\r\n          <CircularProgress size={60} />\r\n        </Box>\r\n        <Typography variant=\"h4\">Loading...</Typography>\r\n      </Grid>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect, useState } from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectError } from '../store/data';\r\n\r\nconst Error = () => {\r\n  const error = useSelector(selectError);\r\n  const [shown, setShown] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShown(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setShown(true);\r\n      setMessage(error.message ?? 'An error occured. Please refresh and try again.');\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <Snackbar open={shown} onClose={handleClose}>\r\n      <Alert variant=\"filled\" severity=\"error\" onClose={handleClose}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { CssBaseline } from '@material-ui/core';\nimport { fetchForecast } from './store/data';\nimport { Weather } from './components/Weather';\nimport Loading from './components/Loading';\nimport Error from './components/Error';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchForecast());\n  }, [dispatch]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Loading />\n      <Weather />\n      <Error />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './themes/theme';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}